import { c as createComponent, r as renderTemplate, d as renderComponent, u as unescapeHTML } from './astro/server_TmEa5s-H.mjs';
import 'kleur/colors';
import { $ as $$BlogPost } from './BlogPost_CSsN8egm.mjs';

const html = "<h3 id=\"objective\">Objective</h3>\n<p>Predict whether a ticket will meet SLA compliance based on factors such as ticket categories, priorities, and staff handling the tickets.</p>\n<h3 id=\"research-design--methodology\">Research Design &#x26; Methodology</h3>\n<p>The core research question guiding this effort is: How effectively can we predict whether a ticket will fall within SLA compliance?</p>\n<p>Data Caveats</p>\n<ul>\n<li>The dataset was highly imbalanced, with 91% of records corresponding to tickets within SLA (1) and only 9% corresponding to tickets out of SLA (0).</li>\n<li>To mitigate this imbalance, we followed a subsampling approach:\n<ul>\n<li>Selected 1500 random records with in_response_sla = 1.</li>\n<li>Selected 1500 random records with in_response_sla = 0.</li>\n<li>This resulted in a balanced sample population of 3000 records, enabling more effective model training and evaluation.</li>\n</ul>\n</li>\n</ul>\n<p>Variable Selection</p>\n<ul>\n<li>user: The employee responsible for solving the ticket.</li>\n<li>priority_id: Indicates the priority level of the ticket (1 being the highest priority and 4 the lowest).</li>\n<li>queue_cat: The category of the queue to which the ticket belongs (e.g. Managed Services).</li>\n<li>category: The category of the ticket (e.g., Backup/Restore, Service Management, Devices).</li>\n<li>ticket_type: The type of ticket (incident or service request).</li>\n<li>in_response_sla: A binary variable indicating whether the ticket was resolved within SLA (1) or outside SLA (0).</li>\n</ul>\n<p>Data Transformation and Partitioning</p>\n<ul>\n<li>The final dataset included 87 dummy variables derived from categorical transformations and 1 binary variable (in_response_sla).</li>\n<li>The data was partitioned into 80% for training and 20% for testing.</li>\n</ul>\n<h3 id=\"model-specifications-and-results\">Model Specifications and Results</h3>\n<p>Logistic Regression Model</p>\n<ul>\n<li>We found that the threshold for classification was set at 0.4 after hyperparameter tuning would be the one that would yield the best performance of the model.</li>\n</ul>\n<p>Model Evaluation Metrics</p>\n<ul>\n<li>Precision: 72.97% - The ratio of correctly predicted positive observations to the total predicted positives.</li>\n<li>Recall: 77.63% - The ratio of correctly predicted positive observations to all actual positives.</li>\n<li>Accuracy: 73.33% - The overall accuracy of the model.</li>\n</ul>\n<p>Confusion Matrix Results</p>\n<ul>\n<li>True Positive Rate: Predicted out-of-SLA tickets correctly 33% of the time.</li>\n<li>True Negative Rate: Predicted within-SLA tickets correctly 41% of the time.</li>\n<li>False Negative Rate: Incorrectly predicted tickets as within SLA when they were actually out of SLA 12% of the time.</li>\n</ul>\n<p>False Positive Rate: Incorrectly predicted tickets as out of SLA when they were actually within SLA 15% of the time.</p>\n<h3 id=\"business-outcomes-and-recommendations\">Business Outcomes and Recommendations</h3>\n<p>Next Steps</p>\n<ul>\n<li>Deploy the Model: Implement the model in a live environment and conduct an A/B test to assess its performance on real-time data.</li>\n<li>Benefits: This approach has low implementation costs, helps identify patterns in specific queues, and enhances the model by incorporating a larger set of tickets outside SLA.</li>\n</ul>\n<p>Further Research</p>\n<ul>\n<li>Cost Analysis of SLA Breaches: Quantify the cost implications of SLA breaches to better assess the risks associated with erroneous predictions.</li>\n<li>Incorporate Contextual Data: Include text data to analyze sentiment and the complexity of tasks, providing a deeper understanding of service desk performance.</li>\n<li>Benefits: Capturing additional signals and insights will help identify gaps between capacity, skills, and SLA compliance, enabling more targeted improvements.</li>\n</ul>\n<p>Conclusion</p>\n<p>The initial phase of this project has successfully laid the groundwork for addressing critical resource allocation and operational efficiency questions regarding SLA compliance efforts. The models and insights developed provide a robust foundation for further enhancements, particularly with the inclusion of additional data and cost function analysis. It is recommended to continue refining these models and exploring new data integration opportunities to improve client support and operational efficiency further.</p>";

				const frontmatter = {"layout":"../layouts/BlogPost.astro","title":"SLA compliance prediction","slug":"sla-prediction","description":"Utilizes a Logistic Regression Model to predict tickets' SLA compliance based on various factors such as category, queues, user, and priority, achieving an average accuracy score of 73%","tags":["technical","learning","predictive","python"],"added":"2024-07-08T07:00:00.000Z"};
				const file = "/Users/magdalenamartinez/portfolio/src/posts/project-1.md";
				const url = undefined;
				function rawContent() {
					return "\n### Objective\n\nPredict whether a ticket will meet SLA compliance based on factors such as ticket categories, priorities, and staff handling the tickets.\n\n### Research Design & Methodology\n\nThe core research question guiding this effort is: How effectively can we predict whether a ticket will fall within SLA compliance?\n\nData Caveats\n\n* The dataset was highly imbalanced, with 91% of records corresponding to tickets within SLA (1) and only 9% corresponding to tickets out of SLA (0).\n* To mitigate this imbalance, we followed a subsampling approach:\n  * Selected 1500 random records with in\\_response\\_sla = 1.\n  * Selected 1500 random records with in\\_response\\_sla = 0.\n  * This resulted in a balanced sample population of 3000 records, enabling more effective model training and evaluation.\n\nVariable Selection\n\n* user: The employee responsible for solving the ticket.\n* priority\\_id: Indicates the priority level of the ticket (1 being the highest priority and 4 the lowest).\n* queue\\_cat: The category of the queue to which the ticket belongs (e.g. Managed Services).\n* category: The category of the ticket (e.g., Backup/Restore, Service Management, Devices).\n* ticket\\_type: The type of ticket (incident or service request).\n* in\\_response\\_sla: A binary variable indicating whether the ticket was resolved within SLA (1) or outside SLA (0).\n\nData Transformation and Partitioning\n\n* The final dataset included 87 dummy variables derived from categorical transformations and 1 binary variable (in\\_response\\_sla).\n* The data was partitioned into 80% for training and 20% for testing.\n\n### Model Specifications and Results\n\nLogistic Regression Model\n\n* We found that the threshold for classification was set at 0.4 after hyperparameter tuning would be the one that would yield the best performance of the model.\n\nModel Evaluation Metrics\n\n* Precision: 72.97% - The ratio of correctly predicted positive observations to the total predicted positives.\n* Recall: 77.63% - The ratio of correctly predicted positive observations to all actual positives.\n* Accuracy: 73.33% - The overall accuracy of the model.\n\nConfusion Matrix Results\n\n* True Positive Rate: Predicted out-of-SLA tickets correctly 33% of the time.\n* True Negative Rate: Predicted within-SLA tickets correctly 41% of the time.\n* False Negative Rate: Incorrectly predicted tickets as within SLA when they were actually out of SLA 12% of the time.\n\nFalse Positive Rate: Incorrectly predicted tickets as out of SLA when they were actually within SLA 15% of the time.\n\n### Business Outcomes and Recommendations\n\nNext Steps\n\n* Deploy the Model: Implement the model in a live environment and conduct an A/B test to assess its performance on real-time data.\n* Benefits: This approach has low implementation costs, helps identify patterns in specific queues, and enhances the model by incorporating a larger set of tickets outside SLA.\n\nFurther Research\n\n* Cost Analysis of SLA Breaches: Quantify the cost implications of SLA breaches to better assess the risks associated with erroneous predictions.\n* Incorporate Contextual Data: Include text data to analyze sentiment and the complexity of tasks, providing a deeper understanding of service desk performance.\n* Benefits: Capturing additional signals and insights will help identify gaps between capacity, skills, and SLA compliance, enabling more targeted improvements.\n\nConclusion\n\nThe initial phase of this project has successfully laid the groundwork for addressing critical resource allocation and operational efficiency questions regarding SLA compliance efforts. The models and insights developed provide a robust foundation for further enhancements, particularly with the inclusion of additional data and cost function analysis. It is recommended to continue refining these models and exploring new data integration opportunities to improve client support and operational efficiency further.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":3,"slug":"objective","text":"Objective"},{"depth":3,"slug":"research-design--methodology","text":"Research Design & Methodology"},{"depth":3,"slug":"model-specifications-and-results","text":"Model Specifications and Results"},{"depth":3,"slug":"business-outcomes-and-recommendations","text":"Business Outcomes and Recommendations"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$BlogPost, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html)}`
							})}`;
				});

const __vite_glob_0_0 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { __vite_glob_0_0 as _ };
